// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// To connect to a SQLite database file. learn more at below links
// https://www.prisma.io/docs/concepts/database-connectors/sqlite/
// https://www.prisma.io/docs/reference/database-reference/connection-urls
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Issue {
  id               Int      @id @default(autoincrement())
  title            String
  description      String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  status           Int      @default(1)
  assignedToUserId String?
  assignedUser     User?    @relation(fields: [assignedToUserId], references: [id])
}

// status {
//   1-OPEN
//   2-IN_PROGRESS
//   3-CLOSED
// }

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id             String    @id @default(cuid())
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  hashedPassword String?
  image          String?
  accounts       Account[]
  sessions       Session[]
  assignedIssues Issue[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
